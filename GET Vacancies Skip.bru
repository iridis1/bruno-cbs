meta {
  name: GET Vacancies Skip
  type: http
  seq: 4
}

get {
  url: {{baseUrl}}/odata/v1/Vacancies?$skip=2
  body: none
  auth: none
}

params:query {
  $skip: 2
}

tests {
  const axios = require("axios");
  const vacancyValidation = require("./scripts/vacancy-validation.js");
  
  test("GET /Vacancies$skip=x should return all but skipped vacancies", function () {
    vacancyValidation.expectValidOdataResponse(res);    
    
    const skipped = 2;
    const vacancies = res.body.value;  
    vacancyValidation.expectValidVacancies(vacancies);  
    
    // Somehow this fails, reason unknown.
    const allVacanciesResponse = await axios.get(bru.getEnvVar("baseUrl") + "/odata/v1/Vacancies");
    const allVacancies = allVacanciesResponse.data.value;
    expect(vacancies).to.have.lengthOf(allVacancies + skipped + 1);
    expect(vacancies[0]).to.equal(allVacancies[skipped]);
  });
  
}
